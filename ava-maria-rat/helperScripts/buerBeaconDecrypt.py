#!/usr/bin/env python3
from base64 import b64encode
from base64 import b64decode

key = "TKFGQGLMEW"

def buildKeymap(key):

    keyspace = [] 
    for i in range(0x00, 0x100):
        keyspace.append(i)

    key_buffer = []
    i = 0
    while i < 0x100:
        key_buffer.append(key[ i % len(key)])
        i += 1

    variator = 0x00
    j = 0
    while j < 0x100:
        char = ord(key_buffer[j])
        keyspaceChar = keyspace[j]
        added = char + keyspaceChar
        variator = variator + added
        if variator > 0xFF:
            variator = variator & (0xff)

        eax = keyspace[variator]
        tmp = keyspace[j]
        keyspace[j] = eax
        keyspace[variator] = tmp
        j += 1

    return keyspace

def decrypt(plaintext, keyspace):
    
    ki = 1
    variator = 0x00
    out = [] 
    for i in range(len(plaintext)):

        variator = variator + keyspace[ki]
        if variator > 0xFF:
            variator = variator & 0xff

        val = keyspace[variator]
        tmp = keyspace[ki]
        keyspace[ki] = val
        keyspace[variator] = tmp
        additive = tmp + val
        if additive > 0xFF:
            additive = additive & 0xFF

        keyChar = keyspace[additive]
        xoredChar = keyChar ^ plaintext[i]
        out.append(xoredChar)
        ki += 1

    return out


def getPlainText(key, hexString):

    ksp = buildKeymap(key)
    vals = []
    for i in range(0,len(hexString),2):
        hexVal = int((hexString[i] + hexString[i+1]), 16)
        vals.append(hexVal)

    out = decrypt(vals, ksp)
    string = ""
    for i in out:
        string += chr(i)

    return string

